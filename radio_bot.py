# Discord Radio Bot for AzuraCast
# Streams FLAC or MP3 from AzuraCast to a voice channel
# Supports volume control and channel selection


import discord
from discord import app_commands
import asyncio
import ffmpeg
import io


TOKEN = "Bla Bla Bla Token Bla Bla Bla"


STREAM_URL_FLAC = "Bla Bla Bla.flac"
STREAM_URL_MP3 = "Bla Bal Bla.mp3"


FFMPEG_SAMPLE_RATE = 48000  
FFMPEG_CHANNELS = 2         
FFMPEG_SAMPLE_FMT = 's16le' 

intents = discord.Intents.default()
intents.guilds = True
intents.voice_states = True

class RadioBot(discord.Client):
    def __init__(self):
        super().__init__(intents=intents)
        self.tree = app_commands.CommandTree(self)
        self.current_volume = 0.5
        self.voice_client = None
        self.is_streaming = False

    async def on_ready(self):
        print(f"‚úÖ Logged in as {self.user} (ID: {self.user.id})")
        try:
            await self.tree.sync()  
            print("‚úÖ Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ.")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

    async def on_guild_join(self, guild):
        try:
            await self.tree.sync(guild=guild)
            print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: {guild.name}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞ –Ω–æ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ: {e}")

bot = RadioBot()

@bot.tree.command(name="radio", description="–ó–∞–π—Ç–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏ —Å—Ç—Ä–∏–º–∏—Ç—å —Ä–∞–¥–∏–æ")
@app_commands.describe(channel="–ò–º—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (–∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ)")
async def radio(interaction: discord.Interaction, channel: str = None):
    guild = interaction.guild
    ch = None
    allowed_channel_id = 1422341130703339621
    allowed_channels = [c for c in guild.channels if isinstance(c, discord.VoiceChannel) or c.id == allowed_channel_id]

    if channel:
        for c in allowed_channels:
            if c.name.lower() == channel.lower() or str(c.id) == channel:
                ch = c
                break
    else:
        if interaction.user.voice and interaction.user.voice.channel in allowed_channels:
            ch = interaction.user.voice.channel

    if not ch:
        await interaction.response.send_message("‚ùå –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏–ª–∏ —Ç—Ä–∏–±—É–Ω—É.", ephemeral=True)
        return

    if bot.voice_client and bot.voice_client.is_connected():
        await bot.voice_client.disconnect()

    try:
        bot.voice_client = await ch.connect()

        if isinstance(ch, discord.StageChannel):
            me = guild.me or await guild.fetch_member(bot.user.id)
            try:
                await me.edit(suppress=False)
            except Exception as e:
                await interaction.response.send_message(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∞—Ç—å —Å–ø–∏–∫–µ—Ä–æ–º: {e}", ephemeral=True)
        await interaction.response.send_message(f"üé∂ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ {ch.name}. –ù–∞—á–∏–Ω–∞—é —Å—Ç—Ä–∏–º!")
        await start_stream(interaction, STREAM_URL_FLAC)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}", ephemeral=True)

async def start_stream(interaction, stream_url):
    if not bot.voice_client:
        await interaction.followup.send("‚ùå –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")
        return

    ffmpeg_options = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
        'options': f'-vn -filter:a "volume={bot.current_volume}"'
    }
    audio_source = discord.FFmpegPCMAudio(stream_url, **ffmpeg_options)
    bot.voice_client.play(audio_source)
    bot.is_streaming = True

async def set_volume(interaction: discord.Interaction, percent: int):
    if percent < 0 or percent > 100:
        await interaction.response.send_message("‚ùå –ì—Ä–æ–º–∫–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100%.", ephemeral=True)
        return

    bot.current_volume = percent / 100.0
    msg = f"üîä –ì—Ä–æ–º–∫–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {percent}%."

    if bot.voice_client and bot.voice_client.is_connected() and bot.is_streaming:
        bot.voice_client.stop()
        await start_stream(interaction, STREAM_URL_FLAC)
        msg += " –ò–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Å—Ä–∞–∑—É."
    else:
        msg += " –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Å—Ç—Ä–∏–º–µ."

    await interaction.response.send_message(msg)

@bot.tree.command(name="volume", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥—Ä–æ–º–∫–æ—Å—Ç—å (0‚Äì100%)")
@app_commands.describe(percent="–ì—Ä–æ–º–∫–æ—Å—Ç—å –æ—Ç 0 –¥–æ 100")
async def volume(interaction: discord.Interaction, percent: int):
    await set_volume(interaction, percent)

@bot.tree.command(name="vol", description="–°–∏–Ω–æ–Ω–∏–º volume")
@app_commands.describe(percent="–ì—Ä–æ–º–∫–æ—Å—Ç—å –æ—Ç 0 –¥–æ 100")
async def vol(interaction: discord.Interaction, percent: int):
    await set_volume(interaction, percent)

@bot.tree.command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∏–º –∏ –≤—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞")
async def stop(interaction: discord.Interaction):
    if bot.voice_client:
        await bot.voice_client.disconnect()
        bot.is_streaming = False
        await interaction.response.send_message("üõë –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
    else:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –±—ã–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")

bot.run(TOKEN)


