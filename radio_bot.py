import discord
from discord import app_commands

TOKEN = "Bla Bla Bla Token Bla Bla Bla" # Bot token
GUILD_ID = bla bal bal  # Server ID
STREAM_URL_FLAC = "Bla Bla Bla" # Any audio streams

# Stream Settings [beta]
FFMPEG_SAMPLE_RATE = 48000  # Sample rate
FFMPEG_CHANNELS = 2         # Channels (1=mono, 2=stereo)
FFMPEG_SAMPLE_FMT = 's16le' # format PCM (s16le=16 bit[stable}, s32le= 32 bit[unstable]) 


intents = discord.Intents.default()
intents.voice_states = True
intents.messages = True

class RadioBot(discord.Client):
    def __init__(self):
        super().__init__(intents=intents)
        self.tree = app_commands.CommandTree(self)
        self.current_volume = 1.0 # Def volume 0.0 - 1.0
        self.voice_client = None
        self.is_streaming = False

    async def on_ready(self):
        print(f"‚úÖ Logged in as {self.user}")
        try:
            guild = discord.Object(id=GUILD_ID)
            await self.tree.sync(guild=guild)
            print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

bot = RadioBot()

@bot.tree.command(name="radio", description="–°—Ç—Ä–∏–º–∏—Ç—å —Ä–∞–¥–∏–æ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∏–ª–∏ Stage –∫–∞–Ω–∞–ª")
@app_commands.describe(channel="–ò–º—è –∫–∞–Ω–∞–ª–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
async def radio(interaction: discord.Interaction, channel: str = None):
    ch = None

    if channel:
        for c in interaction.guild.channels:
            if isinstance(c, (discord.VoiceChannel, discord.StageChannel)) and c.name.lower() == channel.lower():
                ch = c
                break
    else:
        if interaction.user.voice and interaction.user.voice.channel:
            ch = interaction.user.voice.channel

    if not ch:
        await interaction.response.send_message(
            "‚ùå –ù—É–∂–Ω–æ –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∏–ª–∏ Stage –∫–∞–Ω–∞–ª–µ, –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –µ–≥–æ –∏–º—è.", ephemeral=True
        )
        return

    if bot.voice_client and bot.voice_client.is_connected():
        await bot.voice_client.disconnect()

    try:
        bot.voice_client = await ch.connect()

        if isinstance(ch, discord.StageChannel):
            try:
                me = await ch.guild.fetch_member(bot.user.id)
                await me.edit(suppress=False)
            except Exception as e:
                await interaction.response.send_message(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ç–∞—Ç—å —Å–ø–∏–∫–µ—Ä–æ–º: {e}", ephemeral=True)

        await interaction.response.send_message(f"üé∂ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ {ch.name}. –ù–∞—á–∏–Ω–∞—é —Å—Ç—Ä–∏–º!")
        await start_stream(interaction, STREAM_URL_FLAC)
    except Exception as e:
        await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}", ephemeral=True)

async def start_stream(interaction, stream_url):
    if not bot.voice_client:
        await interaction.followup.send("‚ùå –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        return

    ffmpeg_options = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
        'options': f'-vn -ar {FFMPEG_SAMPLE_RATE} -ac {FFMPEG_CHANNELS} -f {FFMPEG_SAMPLE_FMT} -filter:a "volume={bot.current_volume}"'
    }
    audio_source = discord.FFmpegPCMAudio(stream_url, **ffmpeg_options)
    bot.voice_client.play(audio_source)
    bot.is_streaming = True

@bot.tree.command(name="stop", description="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∏–º –∏ –≤—ã–π—Ç–∏ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")
async def stop(interaction: discord.Interaction):
    if bot.voice_client:
        await bot.voice_client.disconnect()
        bot.is_streaming = False
        await interaction.response.send_message("üõë –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
    else:
        await interaction.response.send_message("‚ùå –ë–æ—Ç –Ω–µ –±—ã–ª –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")

bot.run(TOKEN)
